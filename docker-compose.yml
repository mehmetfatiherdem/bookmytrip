version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Default RabbitMQ port
      - "15672:15672" # Management console port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my_network

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db

  # Redis for services that require it
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  # PostgreSQL
  postgresql:
    image: postgres:13
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123qwe
      POSTGRES_DB: bookmytrip
    ports:
      - "6543:5432"

  # Each service
  bookmytrip-exception-service:
    build: ./bookmytrip-exception-service
    ports:
      - "8097:8097"
    depends_on:
      - mongodb

  bookmytrip-gw:
    build: ./bookmytrip-gw
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - redis

  bookmytrip-notification-service:
    build: ./bookmytrip-notification-service
    ports:
      - "8098:8098"
    depends_on:
      - rabbitmq

  bookmytrip-service:
    build: ./bookmytrip-service
    ports:
      - "8088:8088"
    depends_on:
      - postgresql
      - redis
      - kafka

  bookmytrip-service-discovery:
    build: ./bookmytrip-service-discovery
    container_name: bookmytrip-service-discovery
    ports:
      - "8761:8761"

  bookmytrip-user-service:
    build: ./bookmytrip-user-service
    ports:
      - "8089:8089"
    depends_on:
      - postgresql
      - redis
      - kafka
      - rabbitmq

volumes:
  mongo-data:

networks:
  my_network:
    driver: bridge
